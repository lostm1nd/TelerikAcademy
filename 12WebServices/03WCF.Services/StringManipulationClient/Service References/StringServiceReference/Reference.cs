//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StringManipulationClient.StringServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StringServiceReference.ISubstring")]
    public interface ISubstring {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubstring/CountOccurrence", ReplyAction="http://tempuri.org/ISubstring/CountOccurrenceResponse")]
        int CountOccurrence(string source, string target);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubstring/CountOccurrence", ReplyAction="http://tempuri.org/ISubstring/CountOccurrenceResponse")]
        System.Threading.Tasks.Task<int> CountOccurrenceAsync(string source, string target);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubstringChannel : StringManipulationClient.StringServiceReference.ISubstring, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubstringClient : System.ServiceModel.ClientBase<StringManipulationClient.StringServiceReference.ISubstring>, StringManipulationClient.StringServiceReference.ISubstring {
        
        public SubstringClient() {
        }
        
        public SubstringClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SubstringClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubstringClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubstringClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CountOccurrence(string source, string target) {
            return base.Channel.CountOccurrence(source, target);
        }
        
        public System.Threading.Tasks.Task<int> CountOccurrenceAsync(string source, string target) {
            return base.Channel.CountOccurrenceAsync(source, target);
        }
    }
}
